<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="about_hdr_desc" xml:space="preserve">
    <value>Educational purposes only. No ads, no music, no bullshit.</value>
  </data>
  <data name="about_lbl_gpg" xml:space="preserve">
    <value>GPG KeyID</value>
  </data>
  <data name="about_lbl_thumbprint" xml:space="preserve">
    <value>Digital Signature Thumbprint</value>
  </data>
  <data name="about_lnk_github" xml:space="preserve">
    <value>Github Repo</value>
  </data>
  <data name="about_lnk_tpb" xml:space="preserve">
    <value>TPB Profile</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="bch" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Materials\bch.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="bg_header" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Materials\bg_header.jpg;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="btc" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Materials\btc.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="btn_generate" xml:space="preserve">
    <value>&amp;Generate</value>
  </data>
  <data name="btn_generate_copy" xml:space="preserve">
    <value>&amp;Copy</value>
  </data>
  <data name="btn_savekeyfile" xml:space="preserve">
    <value>&amp;Save Keyfile</value>
  </data>
  <data name="btn_template_abort" xml:space="preserve">
    <value>&amp;Abort</value>
  </data>
  <data name="btn_template_cancel" xml:space="preserve">
    <value>&amp;Cancel</value>
  </data>
  <data name="btn_template_ignore" xml:space="preserve">
    <value>&amp;Ignore</value>
  </data>
  <data name="btn_template_no" xml:space="preserve">
    <value>&amp;No</value>
  </data>
  <data name="btn_template_ok" xml:space="preserve">
    <value>&amp;OK</value>
  </data>
  <data name="btn_template_retry" xml:space="preserve">
    <value>&amp;Retry</value>
  </data>
  <data name="btn_template_yes" xml:space="preserve">
    <value>&amp;Yes</value>
  </data>
  <data name="chat" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Materials\bell.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="error" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Materials\error.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="eth" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Materials\eth.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="exclamation" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Materials\exclamation.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="information" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Materials\info.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="lbl_contrib_bch" xml:space="preserve">
    <value>BCH</value>
    <comment>Bitcoin Cash</comment>
  </data>
  <data name="lbl_contrib_btc" xml:space="preserve">
    <value>BTC</value>
    <comment>Bitcoin</comment>
  </data>
  <data name="lbl_contrib_eth" xml:space="preserve">
    <value>ETH</value>
    <comment>Etherium</comment>
  </data>
  <data name="msgbox_core_runas_msg" xml:space="preserve">
    <value>This program requires it being ran as admin. Right-click on the program and select "Run As Admin".</value>
  </data>
  <data name="msgbox_core_runas_title" xml:space="preserve">
    <value>Requires Admin</value>
  </data>
  <data name="msgbox_debug_callfunc_msg" xml:space="preserve">
    <value>   {0}</value>
  </data>
  <data name="msgbox_debug_callfunc_title" xml:space="preserve">
    <value>Function Called</value>
  </data>
  <data name="msgbox_debug_egg_disable_msg" xml:space="preserve">
    <value>Do you want to disable debug logging?</value>
  </data>
  <data name="msgbox_debug_egg_disable_title" xml:space="preserve">
    <value>Disable Debug Logging?</value>
  </data>
  <data name="msgbox_debug_egg_enable_msg" xml:space="preserve">
    <value>Do you want to enable debug logging?

All logs will be stored in the location:
     {0}</value>
  </data>
  <data name="msgbox_debug_egg_enable_title" xml:space="preserve">
    <value>Enable Debug Logging?</value>
  </data>
  <data name="msgbox_debug_fpath_env_c1_msg" xml:space="preserve">
    <value>Located {0} with Windows Env Var in:

{1}</value>
  </data>
  <data name="msgbox_debug_fpath_env_c1_title" xml:space="preserve">
    <value>Debug: 1000C-1</value>
  </data>
  <data name="msgbox_debug_fpath_env_c2_msg" xml:space="preserve">
    <value>Located {0} with Windows Env Var in:

{1}</value>
  </data>
  <data name="msgbox_debug_fpath_env_c2_title" xml:space="preserve">
    <value>Debug: 1000C-2</value>
  </data>
  <data name="msgbox_debug_fpath_msg" xml:space="preserve">
    <value>Located {0} In:

{1}</value>
  </data>
  <data name="msgbox_debug_fpath_ps_msg" xml:space="preserve">
    <value>Located {0} with Powershell in:

{1}</value>
  </data>
  <data name="msgbox_debug_fpath_ps_title" xml:space="preserve">
    <value>Debug: 1000B</value>
  </data>
  <data name="msgbox_debug_fpath_title" xml:space="preserve">
    <value>Debug: 1000A</value>
  </data>
  <data name="msgbox_debug_ps_output_msg" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="msgbox_debug_ps_output_title" xml:space="preserve">
    <value>Debug: PowerShell Output</value>
  </data>
  <data name="msgbox_err_gen_missname_msg" xml:space="preserve">
    <value>Must specify a name for the license key to be generated for.</value>
  </data>
  <data name="msgbox_err_gen_missname_title" xml:space="preserve">
    <value>No Name Specified</value>
  </data>
  <data name="msgbox_err_locate_msg" xml:space="preserve">
    <value>Could not locate {0}. Try placing the keygen file {1} in the same folder as the {0} program executable.

The next dialog will allow you to simply save the license file {2}

You'll need to copy/paste the saved {2} file into the Filezilla installation folder.</value>
  </data>
  <data name="msgbox_err_locate_title" xml:space="preserve">
    <value>No valid Path to {0}</value>
  </data>
  <data name="msgbox_err_misslib_msg" xml:space="preserve">
    <value>Cannot locate a required library file:
   {0}

Add the missing library file and restart the program.</value>
  </data>
  <data name="msgbox_err_misslib_title" xml:space="preserve">
    <value>Fatal Error</value>
  </data>
  <data name="msgbox_generate_cancel_msg" xml:space="preserve">
    <value>License generation has been cancelled.</value>
  </data>
  <data name="msgbox_generate_cancel_title" xml:space="preserve">
    <value>Operation Cancelled</value>
  </data>
  <data name="msgbox_nolocate_cannot_open_msg" xml:space="preserve">
    <value>Could not find {0}, so I can't open the folder.

If you're sure it is installed, run the patcher and it will allow you to select the location. 

The following locations were searched:
{1}</value>
  </data>
  <data name="msgbox_nolocate_cannot_open_title" xml:space="preserve">
    <value>{0} Not Found</value>
  </data>
  <data name="msgbox_ok_generate_finished_msg" xml:space="preserve">
    <value>License key has been successfully generated in:

{0}</value>
  </data>
  <data name="msgbox_ok_generate_finished_title" xml:space="preserve">
    <value>License Key Generated</value>
  </data>
  <data name="msgbox_ok_generate_msg" xml:space="preserve">
    <value>Do you wish to generate a new license key for Filezilla?</value>
  </data>
  <data name="msgbox_ok_generate_title" xml:space="preserve">
    <value>Generate License File?</value>
  </data>
  <data name="msgbox_update_msg" xml:space="preserve">
    <value>Update v{0} is available.

Updates ensure this patch works with the latest version {1}. If you have issues using this tool, download the latest version in the top menu: Help ► Updates

Would you like to view the update? If not, program will start as normal.</value>
  </data>
  <data name="msgbox_update_title" xml:space="preserve">
    <value>Update Available: {0} ► {1}</value>
  </data>
  <data name="notify_01" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Materials\notify_01.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="rtxt_Desc_intro_1" xml:space="preserve">
    <value>This program will patch</value>
  </data>
  <data name="rtxt_Desc_intro_2" xml:space="preserve">
    <value>and give you a fully registered copy. After the patch is complete, you may launch Filezilla. If you get the Registration window, click "Skip" and use Filezilla as normal.</value>
  </data>
  <data name="question" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Materials\question.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="status_action_generated" xml:space="preserve">
    <value>License generated.</value>
  </data>
  <data name="status_btn_openfolder" xml:space="preserve">
    <value>Opens the folder where {0} is installed</value>
  </data>
  <data name="status_diag_cancelled" xml:space="preserve">
    <value>Key generation cancelled by user</value>
  </data>
  <data name="status_patch_default" xml:space="preserve">
    <value>Press Patch to install Filezilla patch ...</value>
  </data>
  <data name="status_misslib_critical_fail" xml:space="preserve">
    <value>Critical error -- restart keygen</value>
  </data>
  <data name="status_service_already_running" xml:space="preserve">
    <value>Service {0} already running</value>
  </data>
  <data name="status_service_not_started" xml:space="preserve">
    <value>Service {0} not started</value>
  </data>
  <data name="status_service_restart_begin" xml:space="preserve">
    <value>Restarting Service {0}</value>
  </data>
  <data name="status_service_restart_fail" xml:space="preserve">
    <value>Failed restarting service {0}</value>
  </data>
  <data name="status_service_start_fail" xml:space="preserve">
    <value>Could not start service {0}</value>
  </data>
  <data name="status_service_start_success" xml:space="preserve">
    <value>Service {0} started</value>
  </data>
  <data name="status_taskkill_fail" xml:space="preserve">
    <value>Could not kill {0}</value>
  </data>
  <data name="status_taskkill_fail_cmd" xml:space="preserve">
    <value>Could not restart task {0}</value>
  </data>
  <data name="status_taskkill_fail_proc" xml:space="preserve">
    <value>Could not kill task {0}</value>
  </data>
  <data name="status_taskkill_succ" xml:space="preserve">
    <value>Stopped service {0} ...</value>
  </data>
  <data name="status_task_stop" xml:space="preserve">
    <value>Shutting down task {0} ...</value>
  </data>
  <data name="status_task_stop_app" xml:space="preserve">
    <value>Shutting down tasks for {0} ...</value>
  </data>
  <data name="status_txt_name_mouseover" xml:space="preserve">
    <value>Enter name to appear on license (required)</value>
  </data>
  <data name="status_txt_users_mouseover" xml:space="preserve">
    <value>Enter number of users license is good for. Default:</value>
  </data>
  <data name="status_txt_version_mouseover" xml:space="preserve">
    <value>Enter version you are running. Default:</value>
  </data>
  <data name="txt_contrib_intro" xml:space="preserve">
    <value>I do this because I enjoy giving back, and I'm not looking to make a profit off my work. However, donations would help immensely for one purpose -- purchasing libraries and other commercial products which have insane licensing systems. These types of products would make life much easier and get releases pumped out on a more regular basis. Don't feel obligated, this is just "if you can". My main goal is better tools.</value>
  </data>
  <data name="lbl_Updates_Desc" xml:space="preserve">
    <value>To download a new copy of Filezilla Pro, or future updates, enter the version number you need in the textbox and click "Download".</value>
  </data>
  <data name="wget" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\wget.exe;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="cwrite_dmp_exception" xml:space="preserve">
    <value>Dev Dump: Exception:

{0}</value>
  </data>
  <data name="cwrite_dmp_finish" xml:space="preserve">
    <value>Dev Dump: Finished</value>
  </data>
  <data name="dlg_cancelled" xml:space="preserve">
    <value>Cancelled by user</value>
  </data>
  <data name="dlg_title" xml:space="preserve">
    <value>Locate Filezilla.exe</value>
  </data>
  <data name="msgbox_debug_backup_compl_msg" xml:space="preserve">
    <value>.Bak File Generated:

     Source: {0}

     Bak: {1}</value>
  </data>
  <data name="msgbox_debug_backup_compl_title" xml:space="preserve">
    <value>Debug: Backup Complete</value>
  </data>
  <data name="msgbox_debug_backup_exists_msg" xml:space="preserve">
    <value>.bak backup file already exists

     {0}</value>
  </data>
  <data name="msgbox_debug_backup_exists_title" xml:space="preserve">
    <value>Debug: Found Existing Backup</value>
  </data>
  <data name="msgbox_nolocpath_msg" xml:space="preserve">
    <value>Patcher cannot determine where {0} is installed
Tried looking in {1}

You will be prompted to manually locate Filezilla.exe. Ensure that {0} is installed on your system.</value>
  </data>
  <data name="msgbox_nolocpath_title" xml:space="preserve">
    <value>Cannot Locate Filezilla</value>
  </data>
  <data name="msgbox_patchdll_sha256_nomove_msg" xml:space="preserve">
    <value>Filezilla files not modified. It appears these files are already patched. Skipping.

If Filezilla does not work, uninstall Filezilla completely.

Re-install Filezilla, and then re-apply the patch.</value>
  </data>
  <data name="msgbox_patchdll_sha256_nomove_title" xml:space="preserve">
    <value>Patch Already Applied</value>
  </data>
  <data name="msgbox_patch_compl_msg" xml:space="preserve">
    <value>Filezilla has been successfully patched.</value>
  </data>
  <data name="msgbox_patch_compl_title" xml:space="preserve">
    <value>Patch Complete</value>
  </data>
  <data name="status_backup_error_exemissing" xml:space="preserve">
    <value>The target file {0} is missing.</value>
  </data>
  <data name="status_bak_create" xml:space="preserve">
    <value>Creating backup {0} ...</value>
  </data>
  <data name="status_byte_modify" xml:space="preserve">
    <value>Applying patch {0}% ...</value>
  </data>
  <data name="status_dlg_loaded" xml:space="preserve">
    <value>Loaded {0}</value>
  </data>
  <data name="status_fz_not_found" xml:space="preserve">
    <value>Filezilla not found</value>
  </data>
  <data name="status_integrity_fail" xml:space="preserve">
    <value>Integrity check failed</value>
  </data>
  <data name="status_integrity_success" xml:space="preserve">
    <value>Integrity check success</value>
  </data>
  <data name="status_launch_app" xml:space="preserve">
    <value>Launching {0} ...</value>
  </data>
  <data name="status_manual_locate" xml:space="preserve">
    <value>Filezilla not found, loading manual dialog ...</value>
  </data>
  <data name="status_patch_aborted" xml:space="preserve">
    <value>Aborted patching -- files already patched</value>
  </data>
  <data name="status_patch_complete" xml:space="preserve">
    <value>Successfully patched Filezilla</value>
  </data>
  <data name="status_patch_locating" xml:space="preserve">
    <value>Locating {0} ...</value>
  </data>
  <data name="status_patch_start" xml:space="preserve">
    <value>Please wait, applying patch ...</value>
  </data>
  <data name="msgbox_updatebtn_msg" xml:space="preserve">
    <value>This utility will download the latest version of Filezilla Pro and place the files in the same folder as this patcher.

If you run it too many times, the website filezilla-project.org will block your IP address, which usually lasts 30 minutes to 1 hour. Do NOT spam this button.

Continue with download?</value>
    <comment>Warning to users about spamming update button</comment>
  </data>
  <data name="msgbox_updatebtn_title" xml:space="preserve">
    <value>Update Downloader Warning</value>
  </data>
  <data name="lbl_Updates_Title" xml:space="preserve">
    <value>Download Updates</value>
  </data>
  <data name="filezilla_update_demo" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\filezilla_update_demo.exe;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="filezilla_update_live" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\filezilla_update_live.exe;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="msgbox_logs_open_msg" xml:space="preserve">
    <value>Log files are only generated if you launch this app with this startup argument: 
     {0}

If you are expernecing issues and need support, you'll be asked to do this and submit your log to the developer for diagnosing on Github.</value>
  </data>
  <data name="msgbox_logs_open_title" xml:space="preserve">
    <value>No Logs Found</value>
  </data>
  <data name="status_download_opening" xml:space="preserve">
    <value>Opening download folder ...</value>
  </data>
  <data name="filezilla_x64" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\filezilla_x64.exe;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="filezilla_x86" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\filezilla_x86.exe;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="msgbox_integrity_badsign_msg" xml:space="preserve">
    <value>This utility failed the integrity check.

This utility is signed, but not by the person who developed it. Did you download it from the official Github repo?

Certificate Thumbprint: 
     {0}</value>
    <comment>Program exe signed, but by wrong developer</comment>
  </data>
  <data name="msgbox_integrity_fail_title" xml:space="preserve">
    <value>Integrity Check Failed</value>
  </data>
  <data name="msgbox_integrity_nosign_msg" xml:space="preserve">
    <value>This utility failed the integrity check.

The files for this utility are not signed and may be fake. Files from this utilities' developer will ALWAYS be signed.

Ensure you downloaded this utility from the correct Github repo.

Failed File(s):
     {0}</value>
    <comment>Program exe not signed at all</comment>
  </data>
  <data name="msgbox_integrity_ok_msg" xml:space="preserve">
    <value>This utility passed the integrity check, and is signed by the correct developer.

Certificate Thumbprint:
     {0}</value>
    <comment>Program exe signed and authentic</comment>
  </data>
  <data name="msgbox_integrity_ok_title" xml:space="preserve">
    <value>Integrity Check Successful</value>
  </data>
  <data name="status_exe_write" xml:space="preserve">
    <value>Writing to exe {0}  {1}% ...</value>
  </data>
  <data name="status_patch_hover" xml:space="preserve">
    <value>Begin patching Filezilla ...</value>
  </data>
  <data name="status_update_download_compl" xml:space="preserve">
    <value>Download Complete!</value>
  </data>
  <data name="status_update_hover" xml:space="preserve">
    <value>Download latest Filezilla Pro version ...</value>
  </data>
</root>